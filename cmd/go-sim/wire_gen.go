// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"go-sim/internal/biz"
	"go-sim/internal/conf"
	"go-sim/internal/data"
	"go-sim/internal/server"
	"go-sim/internal/service/menu"
	"go-sim/internal/service/officer"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confServer *conf.Server, confData *conf.Data, jwt *conf.Jwt, logger log.Logger) (*kratos.App, func(), error) {
	db := data.NewMysql(confData, logger)
	dataData, cleanup, err := data.NewData(db, confData, logger)
	if err != nil {
		return nil, nil, err
	}
	officerRepo := data.NewOfficerRepo(dataData, logger)
	officerUsecase := biz.NewOfficerUsecase(jwt, officerRepo, logger)
	officerService := officer.NewOfficerService(officerUsecase)
	grpcServer := server.NewGRPCServer(confServer, officerService, logger)
	menuRepo := data.NewMenuRepo(dataData, logger)
	menuUsecase := biz.NewMenuUsecase(menuRepo, logger)
	menuService := menu.NewMenuService(menuUsecase)
	httpServer := server.NewHTTPServer(confServer, jwt, officerService, menuService, logger)
	app := newApp(logger, grpcServer, httpServer)
	return app, func() {
		cleanup()
	}, nil
}
